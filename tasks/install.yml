---
- name: Create loki system group
  group:
    name: "{{ loki_system_group }}"
    system: true
    state: present

- name: Create loki system user
  user:
    name: "{{ loki_system_user }}"
    system: true
    shell: "/usr/sbin/nologin"
    group: "{{ loki_system_group }}"
    createhome: "{{ loki_system_user_create_home }}"

- name: "Download loki files"
  become: false
  get_url:
    url: "https://github.com/grafana/loki/releases/download/v{{ loki_version }}/loki-linux-amd64.zip"
    dest: "/tmp/"
  delegate_to: localhost

- name: Create temporary directory
  become: false
  file:
    path: /tmp/loki-{{loki_version}}-linux-amd64
    state: directory
  delegate_to: localhost

- name: Unarchive loki files
  become: false
  unarchive:
    src: "/tmp/loki-linux-amd64.zip"
    remote_src: yes
    dest: /tmp/loki-{{loki_version}}-linux-amd64
    creates: "/tmp/loki-{{loki_version}}-linux-amd64/loki-linux-amd64"
  delegate_to: localhost
  check_mode: false

- name: Send loki binary
  copy:
    src: "/tmp/loki-{{loki_version}}-linux-amd64/loki-linux-amd64"
    dest: "/usr/local/bin/loki"
    mode: 0755
    owner: "{{ loki_system_user }}"
    group: "{{ loki_system_group }}"
  notify:
    - Restart loki

- name: Pre-create loki folders
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ loki_system_user }}"
    group: "{{ loki_system_group }}"
  when: loki_directories|length>0
  loop: "{{ loki_directories }}"

- name: Create systemd service unit
  template:
    src: loki.service.j2
    dest: /etc/systemd/system/loki.service
    owner: root
    group: root
    mode: 0644
  notify:
    - Restart loki

- name: Enable and unmask loki service
  systemd:
    daemon_reload: true
    name: loki
    state: started
    enabled: yes
    masked: no
